<?php

namespace OpenActu\UrlBundle\Repository;

/**
 * UrlCoreAnalyzerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UrlCoreAnalyzerRepository extends \Doctrine\ORM\EntityRepository
{

	/**
	 * Get instances
 	 *
	 * @param $classname
	 * @param $request_uri
	 * @return UrlAnalyzer[]|[]
	 */
	public function getInstances($classname,$request_uri)
	{
		$qb = $this->createQueryBuilder('a');
		$qb->where('a.uri like :uri')->setParameter('uri',$request_uri);
		$qb->andWhere('a.classname = :classname')->setParameter('classname',$classname);
		$core = $qb->getQuery()->getResult();
		
		if(0 === count($core))
			return array();
		
		$qb = $this->_em->createQueryBuilder();
		$qb
		  ->select('a')
		  ->from($classname,'a')
		  ->join('a.core','b')
		  ->where('b.uriCalculated = :uriCalculated')
		  ->setParameter('uriCalculated', $request_uri)
		  ;
		$instances = $qb->getQuery()->getResult();
		return $instances;
	}

	/**
	 * Get the active instance from a request uri done
	 *
	 * An active instance is an instance who exists and have the field acceptUpdate at true
	 *
	 * @param $classname
	 * @param $request_uri
	 * @return UrlAnalyzer|null
	 */
	public function getActiveInstance($classname,$request_uri)
	{
		$qb = $this->createQueryBuilder('a');
		$qb->where('a.uri like :uri')->setParameter('uri',$request_uri);
		$qb->andWhere('a.classname = :classname')->setParameter('classname',$classname);
		$core = $qb->getQuery()->getResult();
		
		if(0 === count($core))
			return null;
		
		$qb = $this->_em->createQueryBuilder();
		$qb
		  ->select('a, max(a.id) AS HIDDEN id')
		  ->from($classname,'a')
		  ->join('a.core','b')
		  ->where('b.uriCalculated = :uriCalculated')
		  ->setParameter('uriCalculated', $request_uri)
		  ->andWhere('a.acceptUpdate = :status')
		  ->setParameter('status', true)
		  ->groupBy('b.uriCalculated')
		  ->setMaxResults(1)
		  ;
		$app = $qb->getQuery()->getOneOrNullResult();
		return $app;
	}
}
